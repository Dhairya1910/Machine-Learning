{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1YZRAln2xCyxc8MtwztcnJUKXj-IEFy0m","authorship_tag":"ABX9TyPdCNzRMAvgAST5xat2xtbS"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **PipeLine**\n","**Automatic Execution of Program from start to end**"],"metadata":{"id":"sk2TKga253We"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"PID2l_yO5nAW","executionInfo":{"status":"ok","timestamp":1735388394801,"user_tz":-330,"elapsed":4369,"user":{"displayName":"Dhairya Vaghela","userId":"10315392567157796302"}}},"outputs":[],"source":["from sklearn.ensemble import RandomForestRegressor\n","from sklearn.metrics import mean_absolute_error\n","from sklearn.model_selection import train_test_split\n","from sklearn.pipeline import Pipeline\n","from sklearn.impute import SimpleImputer\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.compose import ColumnTransformer\n","import pandas as pd"]},{"cell_type":"code","source":["Dataset = pd.read_csv(\"/content/drive/MyDrive/Datasets/melb_data.csv\")\n","\n","Y = Dataset.Price\n","X = Dataset.drop([\"Price\"],axis=1)\n","\n","x_train , x_test , y_train,y_test = train_test_split(X , Y ,test_size=0.2,train_size=0.8)\n","\n","numerical_columns = [cname for cname in x_train.columns if x_train[cname].dtype in [\"float64\",\"int64\"]]\n","categorical_columns = [cname for cname in x_train.columns if x_train[cname].dtype == \"object\" and x_train[cname].nunique() < 10]\n","\n","my_cols = numerical_columns + categorical_columns\n","x_train = x_train[my_cols].copy()\n","x_test = x_test[my_cols].copy()"],"metadata":{"id":"B4ciGonj9jQM","executionInfo":{"status":"ok","timestamp":1735388398893,"user_tz":-330,"elapsed":1200,"user":{"displayName":"Dhairya Vaghela","userId":"10315392567157796302"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["numerical_transformer = SimpleImputer(strategy = 'constant')\n","\n","categorical_transformer = Pipeline(\n","    steps = [\n","        (\"imputer\",SimpleImputer(strategy=\"most_frequent\")),\n","        (\"OneHot\",OneHotEncoder(handle_unknown= \"ignore\"))\n","    ]\n",")\n","\n","Preprocessor = ColumnTransformer(\n","    transformers = [\n","        ('numerical',numerical_transformer,numerical_columns),\n","        ('categorical',categorical_transformer,categorical_columns)\n","\n","    ]\n",")\n","\n","model = RandomForestRegressor(random_state=1)\n","\n","My_pipeline = Pipeline(\n","    steps = [\n","        ('Preprocessor',Preprocessor),\n","        ('model',model)\n","    ]\n",")\n","\n","My_pipeline.fit(x_train,y_train)\n","preds = My_pipeline.predict(x_test)\n","\n","print(\"Error in the Data is Shown : \",mean_absolute_error(y_test,preds))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E4p6a0L7AelH","executionInfo":{"status":"ok","timestamp":1733579916460,"user_tz":-330,"elapsed":9980,"user":{"displayName":"Dhairya Vaghela","userId":"10315392567157796302"}},"outputId":"8c26e4b9-ce0d-4336-8bb7-85d199f3275e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Error in the Data is Shown :  167966.36487148466\n"]}]},{"cell_type":"markdown","source":["# RandomForestRegression using Hyperparameter"],"metadata":{"id":"Yl3Q_2VtNZgd"}},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","numerical_transformer = SimpleImputer(strategy='mean')\n","\n","categorical_transformer = Pipeline(\n","    steps = [\n","        (\"imputer\",SimpleImputer(strategy='most_frequent')),\n","        (\"onehotEncoder\",OneHotEncoder(handle_unknown='ignore'))\n","    ]\n",")\n","\n","Preprocessor = ColumnTransformer(\n","    transformers = [\n","        (\"Numerical\",numerical_transformer,numerical_columns),\n","        (\"categorical\",categorical_transformer,categorical_columns)\n","    ]\n",")\n","\n","\n","\n","pipeline_model = Pipeline(\n","    steps = [\n","        (\"Preprocessing\",Preprocessor),\n","        (\"model\",RandomForestRegressor())\n","    ]\n",")\n","\n","param_grids = {\n","    \"model__n_estimators\": [100, 200, 300, 400],\n","    \"model__criterion\": ['squared_error', 'absolute_error'],\n","    \"model__max_depth\": [None, 5, 10, 20],\n","    \"model__min_samples_split\": [2, 5, 10],\n","    \"model__min_samples_leaf\": [1, 2, 4],\n","    \"model__max_features\": [\"sqrt\", \"log2\", None],\n","}\n","\n","grid_model = GridSearchCV(estimator=pipeline_model,param_grid=param_grids,n_jobs=-1)\n","grid_model.fit(x_train,y_train)\n","y_preds = grid_model.predict(x_test)\n","\n","print(\"error in Data: \", mean_absolute_error(y_test,y_preds))\n"],"metadata":{"id":"KvQY4o1lCz6O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"6Y2KEiQWTes3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sWYK3Y-VQyoc","executionInfo":{"status":"ok","timestamp":1735389334137,"user_tz":-330,"elapsed":11,"user":{"displayName":"Dhairya Vaghela","userId":"10315392567157796302"}},"outputId":"a80ce693-117e-44e7-fba6-d6da9d6d5964"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"6AmaJa2BQ3Sv"},"execution_count":null,"outputs":[]}]}